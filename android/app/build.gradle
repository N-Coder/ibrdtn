apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

ext {
    JNI_SRC_DIR = "src/main/jni"
}

def getNDKDir() {
    try {
        Properties properties = new Properties()
        properties.load(rootProject.file('local.properties').newDataInputStream())
        properties.getProperty('ndk.dir')
    } catch (IOException ignored) {
        ""
    }
}

rootProject.defaultAndroidConfig(project)

android {
    defaultConfig {
        applicationId "${project.group}.app"
        ndk {
            //abiFilters 'arm64-v8a'
        }
        externalNativeBuild.ndkBuild {
            targets "android-glue"
        }
    }
    externalNativeBuild.ndkBuild {
        path file("${JNI_SRC_DIR}/Android.mk")
    }
}

if (android.signingConfigs.release.storeFile.exists()) {
    android.buildTypes.release.signingConfig = android.signingConfigs.release
}

task prepareNDKBuild(type: Exec) {
    executable "sh"
    workingDir JNI_SRC_DIR
    def ndkDir = getNDKDir()
    if (ndkDir != null) {
        args "-c", "export PATH=${ndkDir}:\$PATH; ./prepareBuild.sh"
    } else {
        args "prepareBuild.sh"
    }
}
preBuild.dependsOn prepareNDKBuild

task cleanNDKBuild(type: Exec) {
    executable "sh"
    workingDir JNI_SRC_DIR
    args "cleanBuild.sh"
}
clean.finalizedBy cleanNDKBuild

dependencies {
    api project(':library') // "de.tubs.ibr.dtn:library:${project.version}"
    implementation "com.jjoe64:graphview:3.1.4"
    implementation "com.google.zxing:core:3.2.1"
    implementation "com.google.zxing:android-integration:3.2.1"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}